---
- name: Setup environment
  hosts: localhost
  tasks:
    # - name: Print all Ansible facts
    #   ansible.builtin.debug:
    #     var: ansible_facts
    # - name: Add caddy role
    #   community.general.ansible_galaxy_install:
    #     type: role
    #     name: caddy_ansible.caddy_ansible
    - name: Update and upgrade package register
      ansible.builtin.apt:
        update_cache: true
        upgrade: true
      become: true
    - name: Enable ntp
      become: true
      ansible.builtin.apt:
        name: ntp
        state: latest
    # - name: Check node version
    #   become: true
    #   ansible.builtin.command:
    #     cmd: "node -v && echo -n NONODE "
    #   ignore_errors: true
    #   changed_when: false
    #   register: node_version
    - name: Setup nodejs
      become: true
      # when: node_version.stdout == 'NONODE'
      block:
        - name: Add nodejs apt key
          ansible.builtin.apt_key:
            url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        - name: Add node repo to apt
          ansible.builtin.apt_repository:
            repo: deb https://deb.nodesource.com/node_18.x {{ ansible_distribution_release }} main
            update_cache: true
        - name: Install Node 18
          ansible.builtin.apt:
            name: nodejs
        - name: Enable corepack
          ansible.builtin.shell:
            cmd: "touch {{ ansible_env['HOME'] }}/corepack_enabled_flag && corepack enable"
            creates: "{{ ansible_env['HOME'] }}/corepack_enabled_flag"
          register: corepack_enable
        - name: Print corepack enable
          ansible.builtin.debug:
            var: corepack_enable
    - name: Setup pnpm
      become: true
      block:
        - name: Install and enable pnpm
          ansible.builtin.shell:
            cmd: "command -v pnpm > /dev/null && echo -n PNPMAVAILABLE || corepack prepare pnpm@latest-7 --activate"
          register: pnpm_install
          changed_when: pnpm_install.stdout != 'PNPMAVAILABLE'
        - name: Print pnpm_install result
          ansible.builtin.debug:
            var: pnpm_install
          changed_when: false
        - name: Run pnpm setup command
          when: pnpm_install.changed
          ansible.builtin.command:
            cmd: pnpm setup
          register: pnpm_setup_output
          changed_when: "'Appended new lines' in pnpm_setup_output.stdout"
        - name: Source bashrc after pnpm was added to path
          when: pnpm_setup_output.changed
          ansible.builtin.command:
            cmd: "{{ pnpm_setup_output.stdout_lines[-1] }}"
    - name: Install global node packages
      become: true
      block:
        - name: Add dotenv-cli
          community.general.pnpm:
            global: true
            name: dotenv-cli
        - name: Add pm2
          community.general.pnpm:
            global: true
            name: pm2
    - name: Install Mediasoup dependencies
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
          - build-essential
      become: true
    - name: Setup Caddy 2
      become: true
      block:
        - name: Install caddy server prerequisites
          ansible.builtin.apt:
            name:
              - debian-keyring
              - debian-archive-keyring
              - apt-transport-https
        - name: Add caddy key
          ansible.builtin.apt_key:
            url: https://dl.cloudsmith.io/public/caddy/stable/gpg.key
        - name: Add caddy repo
          ansible.builtin.apt_repository:
            repo: deb https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main
            filename: caddy-stable
            update_cache: true
        - name: Install caddy
          ansible.builtin.apt:
            name: caddy
        - name: Locate caddy path
          ansible.builtin.command:
            cmd: which caddy
          register: caddy_location
          changed_when: false
        # - name: debug caddy path
        #   ansible.builtin.debug:
        #     var: caddy_location
        - name: Give caddy permission to bind to lower ports
          community.general.capabilities:
            path: "{{ caddy_location.stdout }}"
            capability: cap_net_bind_service=eip
            state: present
    - name: Setup pm2 log rotation
      become: true
      block:
        - name: Check if already installed
          ansible.builtin.command:
            cmd: pm2 describe pm2-logrotate
          register: logrotate_install_status
          changed_when: false
          failed_when: false
        - name: Install pm2-logrotate
          ansible.builtin.command:
            cmd: pm2 install pm2-logrotate
          when: "'doesn\\'t exist' in logrotate_install_status.stderr"
          changed_when: true
    - name: Setup docker
      become: true
      block:
        - name: Add docker key
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
        - name: Add docker repo
          ansible.builtin.apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            update_cache: true
            filename: docker
        - name: Install docker
          ansible.builtin.apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
        - name: Activate docker service
          ansible.builtin.service:
            name: docker
            state: started
        - name: Add docker user group
          ansible.builtin.group:
            name: docker
        - name: Add user to docker user group
          ansible.builtin.user:
            name: "{{ ansible_env.USER }}"
            groups:
              - docker
            append: true
    - name: Setup postgres client
      become: true
      block:
        - name: Add postgres key
          ansible.builtin.apt_key:
            url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        - name: Add postgres repo
          ansible.builtin.apt_repository:
            repo: deb https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main
            filename: pgdg
        - name: Install postgres client
          become: true
          ansible.builtin.apt:
            name:
              - postgresql-client-15
